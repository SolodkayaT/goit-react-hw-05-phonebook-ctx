{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Header/Header.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactListItem/ContactListItem.js","components/ContactListButton/ContactListButton.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Header/Header.js","components/context/themeContext.js","components/Filter/Filter.js","components/hoc/withTheme.js","components/App/App.js","index.js"],"names":["module","exports","ContactListItem","contact","keys","children","className","styles","contactItem","key","name","phone","defaultProps","ContactListButton","onRemoveContact","contactButton","type","onClick","id","ContactList","contacts","onRemove","title","map","uuid","ContactForm","state","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","Header","onToggleTheme","label","switch","checked","slider","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","Filter","onChangeFilter","filter","withTheme","WrappedComponent","theme","toggleTheme","bind","newTheme","Provider","toggle","changeFilter","addContact","some","alert","prevState","getFiltredContacts","toLowerCase","includes","removeContact","persistedContacts","localStorage","getItem","console","log","JSON","parse","prevProps","setItem","stringify","visibleContacts","Consumer","body","style","color","background","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90de97c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"Header_themeSelector__15YsE\",\"label\":\"Header_label__1K-2H\",\"switch\":\"Header_switch__24V0X\",\"slider\":\"Header_slider__L381q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__ATLM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__n3u0Z\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\n\nexport default function ContactListItem({ contact, keys, children }) {\n  return (\n    <li className={styles.contactItem} key={keys}>\n      <p>\n        {contact.name} : {contact.phone}\n      </p>\n      {children}\n    </li>\n  );\n}\n\nContactListItem.defaultProps = {\n  contact: {},\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object,\n  keys: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ contact, onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={() => onRemoveContact(contact.id)}\n    >\n      Delete\n    </button>\n  );\n}\n\nContactListButton.defaultProps = {\n  contact: {}\n};\n\nContactListButton.propTypes = {\n  contact: PropTypes.object,\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport { uuid } from \"uuidv4\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\nimport styles from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onRemove }) {\n  return (\n    <>\n      <h2 className={styles.title}>Contacts</h2>\n      <ul>\n        {contacts.map(contact => (\n          <ContactListItem contact={contact} key={uuid()}>\n            <ContactListButton\n              contact={contact}\n              onRemoveContact={() => onRemove(contact.id)}\n            />\n          </ContactListItem>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: []\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onRemove: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <>\n        <h1 className={styles.title}>Phonebook</h1>{\" \"}\n        <form className={styles.form} onSubmit={this.hanleSubmit}>\n          <label className={styles.formLabel}>\n            Name\n            <input\n              className={styles.formInput}\n              type=\"text\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={this.handleChange}\n              name=\"name\"\n              required\n            ></input>\n          </label>\n          <label className={styles.formLabel}>\n            Phone\n            <input\n              className={styles.formInput}\n              type=\"text\"\n              value={phone}\n              placeholder=\"Enter phone\"\n              onChange={this.handleChange}\n              name=\"phone\"\n              required\n            ></input>\n          </label>\n          <button className={styles.formButton} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ onToggleTheme }) => {\n  return (\n    <>\n      <span className={styles.label}>Theme</span>\n      <label className={styles.switch}>\n        <input\n          type=\"checkbox\"\n          checked={styles.checked}\n          onChange={e => onToggleTheme(e.target.value)}\n        />\n        <span className={styles.slider}></span>\n      </label>\n    </>\n  );\n};\nexport default Header;\n\nHeader.propTypes = {\n  onToggleTheme: PropTypes.func\n};\n","import React from \"react\";\nexport const themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodyBg: \"white\"\n  },\n  dark: {\n    fontColor: \"white\",\n    bodyBg: \"black\"\n  }\n};\n\nconst ThemeContext = React.createContext(themeConfig);\nexport default ThemeContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <input\n      className={styles.filter}\n      type=\"text\"\n      value={value}\n      onChange={e => onChangeFilter(e.target.value)}\n    ></input>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\"\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport { themeConfig } from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n  return class withTheme extends Component {\n    constructor() {\n      super();\n      this.state = {\n        theme: \"light\"\n      };\n      this.toggleTheme = this.toggleTheme.bind(this);\n    }\n\n    toggleTheme(newTheme) {\n      this.setState({\n        theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\n      });\n    }\n\n    render() {\n      return (\n        <ThemeContext.Provider value={themeConfig[this.state.theme]}>\n          <WrappedComponent {...this.props} toggle={e => this.toggleTheme(e)} />\n        </ThemeContext.Provider>\n      );\n    }\n  };\n};\n\nexport default withTheme;\n","import React, { Component } from \"react\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Header from \"../Header/Header\";\nimport ThemeContext from \"../context/themeContext\";\nimport Filter from \"../Filter/Filter\";\nimport { uuid } from \"uuidv4\";\nimport withTheme from \"../hoc/withTheme\";\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    console.log(persistedContacts);\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  addContact = (name, phone) => {\n    const { contacts } = this.state;\n    const isExist = contacts.some(contact => contact.name === name);\n    if (isExist) {\n      alert(`${name} is already in cntacts!`);\n      return;\n    }\n    const contact = { id: uuid(), name, phone };\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getFiltredContacts();\n    return (\n      <>\n        <ThemeContext.Consumer>\n          {theme => (\n            <div\n              className={styles.body}\n              style={{ color: theme.fontColor, background: theme.bodyBg }}\n            >\n              {this.props.toggle && (\n                <Header onToggleTheme={e => this.props.toggle(e)} />\n              )}\n              {ContactForm && <ContactForm onAddContact={this.addContact} />}\n              {contacts.length > 1 && (\n                <Filter value={filter} onChangeFilter={this.changeFilter} />\n              )}\n              {visibleContacts.length > 0 && (\n                <ContactList\n                  contacts={visibleContacts}\n                  onRemove={this.removeContact}\n                />\n              )}\n            </div>\n          )}\n        </ThemeContext.Consumer>\n      </>\n    );\n  }\n}\nexport default withTheme(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./css/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}