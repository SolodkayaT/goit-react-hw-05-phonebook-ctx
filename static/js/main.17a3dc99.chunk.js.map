{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Header/Header.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactListItem/ContactListItem.js","components/ContactListButton/ContactListButton.js","components/context/themeContext.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["module","exports","ContactListItem","contact","keys","children","className","styles","contactItem","key","name","phone","defaultProps","ContactListButton","onRemoveContact","contactButton","type","onClick","id","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","ContactList","contacts","onRemove","Consumer","theme","style","color","background","title","map","uuid","ContactForm","state","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","Filter","onChangeFilter","filter","Header","themeSelector","label","switch","checked","event","onToggleTheme","currentTarget","slider","App","changeFilter","addContact","some","alert","prevState","getFiltredContacts","toLowerCase","includes","removeContact","toggleTheme","bind","newTheme","persistedContacts","localStorage","getItem","console","log","JSON","parse","prevProps","setItem","stringify","visibleContacts","Provider","section","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17a3dc99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"Header_themeSelector__15YsE\",\"label\":\"Header_label__1K-2H\",\"switch\":\"Header_switch__24V0X\",\"slider\":\"Header_slider__L381q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__ATLM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1zThd\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\n\nexport default function ContactListItem({ contact, keys, children }) {\n  return (\n    <li className={styles.contactItem} key={keys}>\n      <p>\n        {contact.name} : {contact.phone}\n      </p>\n      {children}\n    </li>\n  );\n}\n\nContactListItem.defaultProps = {\n  contact: {},\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  contacts: PropTypes.object,\n  keys: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ contact, onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={() => onRemoveContact(contact.id)}\n    >\n      Delete\n    </button>\n  );\n}\n\nContactListButton.defaultProps = {\n  contact: {},\n  onRemoveContact: () => {}\n};\n\nContactListButton.propTypes = {\n  contact: PropTypes.object,\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nexport const themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodyBg: \"white\"\n  },\n  dark: {\n    fontColor: \"white\",\n    bodyBg: \"black\"\n  }\n};\n\nconst ThemeContext = React.createContext(themeConfig);\nexport default ThemeContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport { uuid } from \"uuidv4\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\nimport ThemeContext from \"../context/themeContext\";\nimport styles from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onRemove }) {\n  return (\n    <ThemeContext.Consumer>\n      {theme => (\n        <div\n          style={{\n            color: theme.fontColor,\n            background: theme.bodyBg\n          }}\n        >\n          <h2 className={styles.title}>Contacts</h2>\n          <ul>\n            {contacts.map(contact => (\n              <ContactListItem contact={contact} key={uuid()}>\n                <ContactListButton\n                  contact={contact}\n                  onRemoveContact={() => onRemove(contact.id)}\n                />\n              </ContactListItem>\n            ))}\n          </ul>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: [],\n  onRemove: () => {}\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onRemove: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport ThemeContext from \"../context/themeContext\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <ThemeContext.Consumer>\n        {theme => (\n          <div\n            style={{\n              color: theme.fontColor,\n              background: theme.bodyBg\n            }}\n          >\n            <h1 className={styles.title}>Phonebook</h1>\n            <form className={styles.form} onSubmit={this.hanleSubmit}>\n              <label className={styles.formLabel}>\n                Name\n                <input\n                  className={styles.formInput}\n                  type=\"text\"\n                  value={name}\n                  placeholder=\"Enter name\"\n                  onChange={this.handleChange}\n                  name=\"name\"\n                  required\n                ></input>\n              </label>\n              <label className={styles.formLabel}>\n                Phone\n                <input\n                  className={styles.formInput}\n                  type=\"text\"\n                  value={phone}\n                  placeholder=\"Enter phone\"\n                  onChange={this.handleChange}\n                  name=\"phone\"\n                  required\n                ></input>\n              </label>\n              <button className={styles.formButton} type=\"submit\">\n                Add contact\n              </button>\n            </form>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport ThemeContext from \"../context/themeContext\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <ThemeContext.Consumer>\n      {theme => (\n        <div\n          style={{\n            color: theme.fontColor,\n            background: theme.bodyBg\n          }}\n        >\n          <input\n            className={styles.filter}\n            type=\"text\"\n            value={value}\n            onChange={e => onChangeFilter(e.target.value)}\n          ></input>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\",\n  onChangeFilter: () => {}\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport styles from \"./Header.module.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {theme => (\n          <div\n            className={styles.themeSelector}\n            style={{\n              color: theme.fontColor,\n              background: theme.bodyBg\n            }}\n          >\n            <span className={styles.label}>Theme</span>\n            <label className={styles.switch}>\n              <input\n                type=\"checkbox\"\n                checked={styles.checked}\n                onChange={event =>\n                  this.props.onToggleTheme(event.currentTarget.value)\n                }\n              />\n              <span className={styles.slider}></span>\n            </label>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ThemeContext from \"../context/themeContext\";\nimport { themeConfig } from \"../context/themeContext\";\nimport Filter from \"../Filter/Filter\";\nimport Header from \"../Header/Header\";\nimport styles from \"./App.module.css\";\nimport { uuid } from \"uuidv4\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [],\n      filter: \"\",\n      theme: \"light\"\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme(newTheme) {\n    this.setState({\n      theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\n    });\n  }\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    console.log(persistedContacts);\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  addContact = (name, phone) => {\n    const { contacts } = this.state;\n    const isExist = contacts.some(contact => contact.name === name);\n    if (isExist) {\n      alert(`${name} is already in cntacts!`);\n      return;\n    }\n    const contact = { id: uuid(), name, phone };\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getFiltredContacts();\n    return (\n      <ThemeContext.Provider value={themeConfig[this.state.theme]}>\n        <section className={styles.section}>\n          {this.state.theme && <Header onToggleTheme={this.toggleTheme} />}\n          {ContactForm && <ContactForm onAddContact={this.addContact} />}\n          {contacts.length > 1 && (\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          )}\n          {visibleContacts.length > 0 && (\n            <ContactList\n              contacts={visibleContacts}\n              onRemove={this.removeContact}\n            />\n          )}\n        </section>\n      </ThemeContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./css/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}